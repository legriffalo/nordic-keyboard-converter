import keyboard as k
import sys
import threading
import time as t


# from PyQt5 import QtWidgets
# from PyQt5.QtWidgets import QTwidgets, QApplication, QLabel, QPushButton, QVBoxLayout, QWidget, QFileDialog, QGridLayout

from PyQt5.QtWidgets import QApplication, QLabel, QPushButton, QVBoxLayout, QWidget, QFileDialog, QGridLayout
from PyQt5.QtGui import QPixmap
from PyQt5 import QtGui, QtCore, QtSvg
from PyQt5.QtGui import QCursor


# keyboard = Controller()
def startkeyboard():
    while True:
        event = k.read_event()
        
        if k.is_pressed('alt'):
            
            if k.is_pressed('shift'):
                if k.is_pressed('a'):
                    k.write("Ä",exact = True)
                if k.is_pressed('o'):
                    k.write("Ö",exact = True)
            else:
                if k.is_pressed('a'):
                    k.write("ä",exact = True)
                if k.is_pressed('o'):
                    k.write("ö",exact = True)
                    
            

# create window
class app_window(QWidget):
    def __init__(self):
        super().__init__()
      
        self.screen = QApplication.primaryScreen()
        self.size = self.screen.size()
        self.rect = self.screen.availableGeometry()

        self.xDisplacement = self.rect.width()-500
        self.yDisplacement = self.rect.height()-250
      
        self.resize(500,200)
        self.setFixedWidth(500)
        self.setFixedHeight(200)
        self.setWindowTitle("Nordic Keyboard Converter")
        # self.setStyleSheet("background:black;")
        self.setWindowIcon(QtGui.QIcon('nordic.png'))
        self.move(self.xDisplacement,self.yDisplacement)
        self.grid = QGridLayout()
        self.image = QPixmap("nordic.png")
        self.image = self.image.scaledToWidth(50)
        self.logo = QLabel()
        self.logo.setPixmap(self.image)
        self.start()
        
    def start(self):
        self.grid.addWidget(self.logo, 0, 4)

    def info(self):
        print('Screen: %s' % self.screen.name())
        print('Size: %d x %d' % (self.size.width(), self.size.height()))
        print('Available: %d x %d' % (self.rect.width(), self.rect.height()))
        return 1
    
        
                          

def startgui():
    app = QApplication(sys.argv)
    ex = app_window()
    
    image = QPixmap("nordic.png")
    image = image.scaledToWidth(50)
    logo = QLabel()
    logo.setPixmap(image)
    ex.grid.addWidget(logo, 0, 4)

    # display svgs
    svg_widget1 = QtSvg.QSvgWidget("../General assets/umlaut caps A.svg")
    svg_widget2 = QtSvg.QSvgWidget("../General assets/umlaut caps O.svg")
    svg_widget3 = QtSvg.QSvgWidget("../General assets/umlaut lower a.svg")
    svg_widget4 = QtSvg.QSvgWidget("../General assets/umlaut lower o.svg")
    svg_widget1.setStyleSheet("""border-radius:25px;""")
    
        # label with key commands
    label1 = QLabel("alt+shft+A")
    label2 = QLabel("alt+shft+O")
    label3 = QLabel("alt+A")
    label4 = QLabel("alt+O")

    label1.setAlignment(QtCore.Qt.AlignCenter)
    label2.setAlignment(QtCore.Qt.AlignCenter)
    label3.setAlignment(QtCore.Qt.AlignCenter)
    label4.setAlignment(QtCore.Qt.AlignCenter)

    label1.setStyleSheet("""color:white;""")
    label2.setStyleSheet("""color:white;""")
    label3.setStyleSheet("""color:white;""")
    label4.setStyleSheet("""color:white;""")

    ex.grid.addWidget(logo, 0, 4)
    ex.grid.addWidget(svg_widget1, 1,0)
    ex.grid.addWidget(svg_widget2, 1,1)
    ex.grid.addWidget(svg_widget3, 1,2)
    ex.grid.addWidget(svg_widget4, 1,3)
    ex.grid.addWidget(label1, 2,0)
    ex.grid.addWidget(label2, 2,1)
    ex.grid.addWidget(label3, 2,2)
    ex.grid.addWidget(label4, 2,3)
    ex.show()
    ex.info()
    sys.exit(app.exec_())







# two seperate threads to run gui and keylog continuously
keystrokes = threading.Thread(target=startkeyboard, daemon=True)

# gui = threading.Thread(target=startgui, daemon=True)    

keystrokes.start()
startgui()

